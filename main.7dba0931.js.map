{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","notification","createElement","className","innerText","append","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCE,EAAS,UAAUF,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQM,SAC5CN,KAAAA,QAAAA,OAAAA,EAAQO,SAK1B,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAeb,SAASc,cAAc,OAE5CD,EAAaE,UAAY,UACzBF,EAAaG,UAAYJ,EACzBb,EAAKkB,OAAOJ,IAGdK,OAAOC,QAAU,CACfjB,QAAAA,EACAS,aAAAA","file":"main.7dba0931.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve((`It was ${eventName} on the element: ${element.nodeName},`\n        + ` id: ${element.id}`));\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = document.createElement('div');\n\n  notification.className = 'message';\n  notification.innerText = message;\n  body.append(notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}